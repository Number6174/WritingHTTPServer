# SPDX-FileCopyrightText: 2021 Number6174
# SPDX-License-Identifier: CC0-1.0

name: pyinstaller

on:
  push:
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Check out repo and set up python
    #----------------------------------------------
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version-file: '.python-version'
    # Install & configure poetry
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        virtualenvs-path: .venv
        installer-parallel: true
    # Load cached venv if cache exists
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    # Install dependencies if cache does not exist
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    # Run pyinstaller
    - name: pyinstaller freeze
      run: |
        poetry run pyinstaller server.spec
    # Package up release
    - name: Zip Files
      run: |
        7z a -tzip WritingHTTPServer.zip ./dist/server/*
    # Create release
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: WritingHTTPServer.zip
